<?xml version='1.0' encoding='utf-8'?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!-- The contents of this file will be loaded for each web application -->
<Context>

    <!-- Default set of monitored resources -->
    <WatchedResource>WEB-INF/web.xml</WatchedResource>

    <!-- Uncomment this to disable session persistence across Tomcat restarts -->
    <!--
    <Manager pathname="" />
    -->

    <!-- Uncomment this to enable Comet connection tacking (provides events
         on session expiration as well as webapp lifecycle) -->
    <!--
    <Valve className="org.apache.catalina.valves.CometConnectionManagerValve" />
    -->
	
<!--
  |- name：表示以后要查找的名称。通过此名称可以找到DataSource，此名称任意更换，但是程序中最终要查找的就是此名称，
           为了不与其他的名称混淆，所以使用jdbc/oracle，现在配置的是一个jdbc的关于oracle的命名服务。
  |- auth：由容器进行授权及管理，指的用户名和密码是否可以在容器上生效
  |- type：此名称所代表的类型，现在为javax.sql.DataSource
  |- maxActive：表示一个数据库在此服务器上所能打开的最大连接数
  |- maxIdle：表示一个数据库在此服务器上维持的最小连接数
  |- maxWait：最大等待时间。10000毫秒
  |- username：数据库连接的用户名
  |- password：数据库连接的密码
  |- driverClassName：数据库连接的驱动程序
  |- url：数据库连接的地址
-->

			
   <!--配置Oracle数据库的JNDI数据源-->
   <Resource name="jdbc/dbcp_oracle"
              auth="Container"
              type="javax.sql.DataSource"
              factory="org.apache.tomcat.jdbc.pool.DataSourceFactory"
              testWhileIdle="true"
              testOnBorrow="true"
              testOnReturn="false"
              validationQuery="select 1 from dual"
              validationInterval="30000"
              timeBetweenEvictionRunsMillis="30000"
              maxActive="80"
              maxIdle="20"
              minIdle="10"
              maxWait="10000"
              initialSize="1"
              removeAbandonedTimeout="60"
              removeAbandoned="true"
              logAbandoned="true"
              minEvictableIdleTimeMillis="30000"
              jmxEnabled="true"
              jdbcInterceptors=
"org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer"
              username="scott"
              password="scott"
              driverClassName="oracle.jdbc.OracleDriver"
              url="jdbc:oracle:thin:@192.168.1.202:1521:WD"/>
	
	<!--配置MySQL数据库的JNDI数据源-->
	<Resource 
			name="jdbc/dbcp_mysql"
			auth="Container" 
			type="javax.sql.DataSource"
			factory="org.apache.tomcat.jdbc.pool.DataSourceFactory"
			maxActive="100" 
			maxIdle="30" 
			maxWait="10000"
			username="root" 
			password="root"
			driverClassName="com.mysql.jdbc.Driver"
			url="jdbc:mysql://192.168.1.201:3306/wd?useUnicode=true&amp;characterEncoding=utf-8"/>

	<!--配置SQLServer数据库的JNDI数据源-->
	<Resource 
			name="jdbc/dbcp_sqlserver"
			auth="Container" 
			type="javax.sql.DataSource"
			factory="org.apache.tomcat.jdbc.pool.DataSourceFactory"
			maxActive="100" 
			maxIdle="30" 
			maxWait="10000"
			username="sa" 
			password="sa"
			driverClassName="com.microsoft.sqlserver.jdbc.SQLServerDriver"
			url="jdbc:sqlserver://192.168.1.201:1433;DatabaseName=wd"/>
	
	<!--配置PostgreSQl数据库的JNDI数据源-->
	<Resource 
			name="jdbc/dbcp_postgres"
			auth="Container" 
			type="javax.sql.DataSource"
			maxActive="100" 
			maxIdle="30" 
			maxWait="10000"
			username="postgres" 
			password="postgres"
			driverClassName="org.postgresql.Driver"
			url="jdbc:postgresql://localhost/postgres"/>
			
	<!--配置Sqlite数据库的JNDI数据源-->
	<Resource 
			name="jdbc/dbcp_sqlite"
			auth="Container" 
			type="javax.sql.DataSource"
			maxActive="100" 
			maxIdle="30" 
			maxWait="10000"
			username="postgres" 
			password="postgres"
			driverClassName="org.postgresql.Driver"
			url="jdbc:postgresql://localhost/postgres"/>
					
   
        
    <!-- 使用C3P0配置针对Oracle数据库的JNDI数据源 -->
    <Resource 
        name="jdbc/c3p0_oracle" 
        auth="Container"
        factory="org.apache.naming.factory.BeanFactory" 
        type="com.mchange.v2.c3p0.ComboPooledDataSource"
        driverClass="oracle.jdbc.OracleDriver"
        idleConnectionTestPeriod="60"
        maxPoolSize="50" 
        minPoolSize="2"
        acquireIncrement="2" 
        jdbcUrl="jdbc:oracle:thin:@192.168.1.202:1521:WD"
        user="scott"
        password="scott"/>
        
     <!-- 使用C3P0配置针对MySQL数据库的JNDI数据源 -->
    <Resource 
        name="jdbc/c3p0_mysql" 
        auth="Container"
        factory="org.apache.naming.factory.BeanFactory" 
        type="com.mchange.v2.c3p0.ComboPooledDataSource"
        driverClass="com.mysql.jdbc.Driver"
        idleConnectionTestPeriod="60"
        maxPoolSize="50" 
        minPoolSize="2"
        acquireIncrement="2" 
        user="root" 
        password="root"
        jdbcUrl="jdbc:mysql://192.168.1.201:3306/wd?useUnicode=true&amp;characterEncoding=utf-8"/>
        
        
    <!--使用C3P0配置针对SQLServer数据库的JNDI数据源-->
    <Resource 
        name="jdbc/c3p0_sqlserver"
        auth="Container"
        factory="org.apache.naming.factory.BeanFactory" 
        type="com.mchange.v2.c3p0.ComboPooledDataSource"
        driverClass="com.microsoft.sqlserver.jdbc.SQLServerDriver"
        idleConnectionTestPeriod="60"
        maxPoolSize="50" 
        minPoolSize="2"
        acquireIncrement="2" 
        jdbcUrl="jdbc:sqlserver://192.168.1.201:1433;DatabaseName=wd"
        user="sa" 
        password="sa"/>
        
        
    <!--使用C3P0配置针对Postgres数据库的JNDI数据源-->
    <Resource 
			name="jdbc/c3p0_postgres"
			auth="Container" 
			type="com.mchange.v2.c3p0.ComboPooledDataSource"
			factory="org.apache.naming.factory.BeanFactory"
			idleConnectionTestPeriod="60"
	        maxPoolSize="50" 
	        minPoolSize="2"
	        acquireIncrement="2" 
			user="postgres" 
			password="postgres"
			driverClass="org.postgresql.Driver"
			jdbcUrl="jdbc:postgresql://localhost/postgres"/>
        
    
    <!-- 使用阿里巴巴的DruidDataSource配置针对Oracle数据库的JNDI数据源 -->
    <Resource 
        name="jdbc/druid_oracle"
        factory="com.alibaba.druid.pool.DruidDataSourceFactory"
        auth="Container"
        type="javax.sql.DataSource"
        driverClassName="oracle.jdbc.OracleDriver"
        url="jdbc:oracle:thin:@192.168.1.202:1521:WD"
        username="scott"
        password="scott"
        maxActive="50"
        maxWait="10000"
        removeabandoned="true"
        removeabandonedtimeout="60"
        logabandoned="false"
        filters="stat"/>
        
    <!-- 使用阿里巴巴的DruidDataSource配置针对MySQL数据库的JNDI数据源 -->
     <Resource 
        name="jdbc/druid_mysql"
        factory="com.alibaba.druid.pool.DruidDataSourceFactory"
        auth="Container"
        type="javax.sql.DataSource"
        driverClassName="com.mysql.jdbc.Driver"
        url="jdbc:mysql://192.168.1.201:3306/wd?useUnicode=true&amp;characterEncoding=utf-8"
        username="root"
        password="root"
        maxActive="50"
        maxWait="10000"
        removeabandoned="true"
        removeabandonedtimeout="60"
        logabandoned="false"
        filters="stat"/>
        
    <!--使用阿里巴巴的DruidDataSource配置针对SQLServer数据库的JNDI数据源-->
    <Resource 
        name="jdbc/druid_sqlserver"
        auth="Container"
        factory="com.alibaba.druid.pool.DruidDataSourceFactory" 
        type="javax.sql.DataSource"
        driverClass="com.microsoft.sqlserver.jdbc.SQLServerDriver"
        url="jdbc:sqlserver://192.168.1.201:1433;DatabaseName=wd"
        username="sa" 
        password="sa"
        maxActive="50"
        maxWait="10000"
        removeabandoned="true"
        removeabandonedtimeout="60"
        logabandoned="false"
        filters="stat"/>
        
    <!--使用阿里巴巴的DruidDataSource配置针对Postgres数据库的JNDI数据源-->
    <Resource 
			name="jdbc/druid_postgres"
			auth="Container" 
			type="javax.sql.DataSource"
			factory="com.alibaba.druid.pool.DruidDataSourceFactory"
			maxActive="100" 
			maxIdle="30" 
			maxWait="10000"
			username="postgres" 
			password="postgres"
			driverClass="org.postgresql.Driver"
			url="jdbc:postgresql://localhost/postgres"/>


</Context>